server:
  port: 8081
spring:
  servlet:
    multipart:
      max-file-size: 15MB
      max-request-size: 15MB
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/photobook?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false}
    username: postgres
    password: 12345
    driver-class-name: org.postgresql.Driver
#http://34.125.182.198/
# bash update.sh чтобы обновить обновления

  jpa:
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
    show-sql: false
  minio:
    bucket: ${MINIO_BUCKET:photobook}
    accessKey: ${MINIO_ACCESS_KEY:minio}
    secretKey: ${MINIO_SECRET_KEY:minio123}
    url: ${MINIO_URL:http://localhost:443}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 582427921464-29a66bkpo68kkl1d835qn00gc0oskqrn.apps.googleusercontent.com
            client-secret: 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
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 86400000
  cors:
    allowedOrigins: http://localhost:3000,http://localhost:8080
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
